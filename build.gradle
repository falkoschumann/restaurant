plugins {
  id 'java'
  id 'checkstyle'
  id 'pmd'
  id 'com.diffplug.spotless' version '6.12.0'
  id 'com.github.spotbugs' version '5.0.13'
  id 'org.sonarqube' version '3.5.0.2730'
  id 'org.springframework.boot' version '2.7.7'
  id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'de.muspellheim'
version = '0.0.1-SNAPSHOT'

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  spotbugsSlf4j 'org.slf4j:slf4j-simple:1.7.36'
}

java {
  sourceCompatibility = 17
  targetCompatibility = 17
}

compileJava {
  options.release = 17
  options.encoding = 'utf-8'
}

test {
  useJUnitPlatform()
  testLogging {
    events 'passed', 'skipped', 'failed'
    exceptionFormat 'full'
  }
}

compileTestJava {
  options.release = 17
  options.encoding = 'utf-8'
}

checkstyle {
  var archive = configurations.checkstyle.stream().filter {
    it.name.startsWith('checkstyle')
  }.findFirst().get()
  config = resources.text.fromArchiveEntry(archive, 'google_checks.xml')
  maxWarnings = 0
}

pmd {
  consoleOutput = true
  rulesMinimumPriority = 5
  ruleSets = ['category/java/errorprone.xml', 'category/java/bestpractices.xml']
}

spotless {
  java {
    googleJavaFormat()
  }
}

sonarqube {
  properties {
    property "sonar.projectKey", "falkoschumann_restaurant"
    property "sonar.organization", "falkoschumann"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}
